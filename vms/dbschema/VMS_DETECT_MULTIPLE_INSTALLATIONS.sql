DELIMITER $$

DROP PROCEDURE IF EXISTS `vms_qa`.`VMS_DETECT_MULTIPLE_INSTALLATIONS` $$
CREATE DEFINER=`DBADMIN`@`%` PROCEDURE `VMS_DETECT_MULTIPLE_INSTALLATIONS`()
BEGIN
SELECT CAS.GID AS CASEGID, CAS.CASENAME, SERV.GID AS SERVERGID, SERV.SERVER, COMPO.GID,COMPO.COMPONENT,
CONCAT_WS('.', VERS.MAJOR, VERS.MINOR, VERS.BUILD, VERS.PATCH) AS VERSION, COMPOMAP.PORT   FROM
vms_component_mapping COMPOMAP, vms_caseserver_mapping CASEMAP,
vms_compo_version VERS, vms_components COMPO, vms_servers SERV,
vms_cases CAS
WHERE COMPOMAP.GID IN(
SELECT DISTINCT MAP.GID
FROM vms_component_mapping MAP, vms_component_mapping MAP1
WHERE MAP.CASE_SERVER_GID = MAP1.CASE_SERVER_GID AND
MAP.COMPO_VER_GID = MAP1.COMPO_VER_GID AND
MAP.GID <> MAP1.GID AND
MAP.IS_DELETED = 0 AND MAP1.IS_DELETED = 0) AND
COMPOMAP.IS_DELETED = 0 AND
COMPOMAP.CASE_SERVER_GID = CASEMAP.GID AND
CASEMAP.CASE_GID = CAS.GID AND
CASEMAP.SERVER_GID = SERV.GID AND
COMPOMAP.COMPO_VER_GID = VERS.GID AND
VERS.COMP_GID = COMPO.GID AND
VERS.MAJOR <> 0 AND
CAS.IS_DELETED = 0
ORDER BY CAS.GID;
END $$

DELIMITER ;