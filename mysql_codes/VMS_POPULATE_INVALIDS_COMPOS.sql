DELIMITER $$

DROP PROCEDURE IF EXISTS `vms_qa`.`VMS_POPULATE_INVALID_COMPOS` $$
CREATE DEFINER=`DBADMIN`@`%` PROCEDURE `VMS_POPULATE_INVALID_COMPOS`()
BEGIN
DECLARE case_gid  INT ;
DECLARE  error_condition INT;
DECLARE CASE_CURSOR CURSOR FOR SELECT DISTINCT GID FROM vms_cases WHERE IS_DELETED = 0;
DECLARE CONTINUE HANDLER FOR NOT FOUND
SET error_condition = 1;


DROP TABLE  IF EXISTS vms_temp_invalid_components;

#create table
CREATE TABLE `vms_temp_invalid_components` (
`CASE_GID` INT( 100 ) NOT NULL ,
`COMPONENT` VARCHAR( 200 ) NOT NULL ,
`VERSION` VARCHAR( 50 ) NOT NULL ,
`SERVER` VARCHAR( 100 ) NOT NULL ,
`PORTDETAILS` VARCHAR( 100 ) NOT NULL
);

#SELECT 'vms_temp_invalid_components TABLE CREATED';



OPEN CASE_CURSOR;
  REPEAT
  FETCH CASE_CURSOR INTO case_gid;
  #SELECT CONCAT_WS('+','POPULATING FOR CASEGID: ',case_gid);
  #insert the results into table
  INSERT INTO vms_temp_invalid_components
SELECT C.GID, CO.COMPONENT, CONCAT_WS('.',CV.MAJOR, CV.MINOR , CV.BUILD ,CV.PATCH), S.SERVER, CM.PORT
FROM vms_cases C, vms_servers S, vms_caseserver_mapping CSM, vms_component_mapping CM, vms_compo_version CV, vms_components CO
WHERE S.GID = CSM.SERVER_GID
AND CSM.GID = CM.CASE_SERVER_GID
AND CM.COMPO_VER_GID = CV.GID
AND CV.COMP_GID = CO.GID
AND CM.IS_DELETED = 0
AND CV.MAJOR <> 0
AND CM.COMPO_VER_GID IN (
SELECT DISTINCT CM.COMPO_VER_GID
FROM vms_component_mapping CM, vms_caseserver_mapping CS
WHERE CS.GID = CM.CASE_SERVER_GID
AND CS.CASE_GID = case_gid
AND COMPO_VER_GID NOT IN (
SELECT COMP_VER_GID FROM VMS_COMPATIBILITY_RULES
WHERE RULE =
(
SELECT RULE FROM VMS_COMPATIBILITY_RULES
WHERE COMP_VER_GID IN (
SELECT CM.COMPO_VER_GID
FROM vms_component_mapping CM, vms_caseserver_mapping CS
WHERE CS.GID = CM.CASE_SERVER_GID
AND CS.CASE_GID = case_gid
AND CM.IS_DELETED = 0
)
AND IS_DELETED = 0
GROUP BY RULE
HAVING COUNT(GID) > 1
ORDER BY COUNT(GID) DESC
LIMIT 0,1
)
AND IS_DELETED = 0
)
AND CM.IS_DELETED = 0
)
AND C.GID = CSM.CASE_GID
AND C.GID = case_gid
ORDER BY CO.BE, S.DOMAIN, CO.COMPONENT ;

  #SELECT CONCAT_WS('+','ROWS INSERTED: ',ROW_COUNT());

  UNTIL error_condition = 1
  END REPEAT;
CLOSE CASE_CURSOR;

SELECT TMP.CASE_GID,C.CASENAME, TMP.COMPONENT, TMP.VERSION, TMP.SERVER, TMP.PORTDETAILS
FROM vms_temp_invalid_components TMP, vms_cases C
WHERE TMP.CASE_GID = C.GID
ORDER BY TMP.CASE_GID;

END $$

DELIMITER ;